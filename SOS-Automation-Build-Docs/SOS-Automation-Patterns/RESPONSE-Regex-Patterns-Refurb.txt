{
  "category": "refurbished_rotatable_aftermarket_surplus_patterns",
  "pattern_groups": [
    {
      "group_name": "refurbished_acceptable",
      "regex_patterns": [
        "refurbish[e|ed]\\s*(?:is\\s*)?acceptabl",
        "refurbish[e|ed]\\s*(?:parts?\\s*)?(?:are\\s*)?(?:is\\s*)?allow[e|ed]",
        "new\\s*or\\s*refurbish[e|ed]",
        "refurbish[e|ed]\\s*or\\s*new",
        "accept[s]?\\s*refurbish[e|ed]",
        "will\\s*accept\\s*refurbish",
        "refurbish[e|ed]\\s*(?:parts?\\s*)?permit[t]?[e|ed]",
        "refurbish[e|ed]\\s*(?:components?\\s*)?(?:may\\s*be\\s*)?offer[e|ed]",
        "refurb\\s*(?:is\\s*)?(?:ok|okay|acceptable)"
      ],
      "exact_phrases": [
        "refurbished acceptable",
        "refurbished is acceptable",
        "refurbished parts acceptable",
        "new or refurbished",
        "refurbished or new",
        "accepts refurbished",
        "will accept refurbished",
        "refurbished permitted",
        "refurbished components acceptable",
        "refurb OK",
        "may offer refurbished"
      ],
      "partial_triggers": [
        "refurbished accept",
        "refurb accept",
        "refurbished allow",
        "new or refurb"
      ],
      "context_patterns": [
        {
          "before": ["will accept", "may offer", "can provide"],
          "trigger": "refurbished",
          "after": ["parts", "components", "items", "material"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "no refurbished",
        "not refurbished",
        "cannot be refurbished",
        "exclude refurbished",
        "factory new only"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["new", "OR", "refurbished"],
        ["refurbished", "AND", "acceptable"]
      ],
      "scoring_weights": {
        "explicit_match": -10,
        "positive_indicator": true,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "overhauled_acceptable",
      "regex_patterns": [
        "overhaul[e|ed]\\s*(?:is\\s*)?acceptabl",
        "overhaul[e|ed]\\s*(?:parts?\\s*)?(?:are\\s*)?allow[e|ed]",
        "new\\s*or\\s*overhaul[e|ed]",
        "overhaul[e|ed]\\s*or\\s*new",
        "accept[s]?\\s*overhaul[e|ed]",
        "overhaul[e|ed]\\s*component[s]?",
        "OH\\s*(?:parts?\\s*)?acceptabl",
        "repair[e|ed]\\s*(?:and\\s*)?overhaul[e|ed]"
      ],
      "exact_phrases": [
        "overhauled acceptable",
        "overhauled components",
        "new or overhauled",
        "overhauled or new",
        "accepts overhauled",
        "OH acceptable",
        "repaired and overhauled",
        "overhauled parts acceptable"
      ],
      "partial_triggers": [
        "overhauled accept",
        "OH accept",
        "overhaul allow"
      ],
      "context_patterns": [
        {
          "before": ["will accept", "may offer"],
          "trigger": "overhauled",
          "after": ["parts", "components", "units"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "no overhauled",
        "not overhauled",
        "cannot be overhauled"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["new", "OR", "overhauled"],
        ["repaired", "AND", "overhauled"]
      ],
      "scoring_weights": {
        "explicit_match": -10,
        "positive_indicator": true,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "surplus_acceptable",
      "regex_patterns": [
        "surplus\\s*(?:is\\s*)?acceptabl",
        "surplus\\s*(?:material\\s*)?(?:is\\s*)?allow[e|ed]",
        "accept[s]?\\s*surplus",
        "excess\\s*(?:property\\s*)?acceptabl",
        "government\\s*surplus\\s*(?:is\\s*)?(?:ok|acceptable)",
        "used\\s*serviceabl[e]?\\s*(?:material\\s*)?(?:USM\\s*)?acceptabl",
        "USM\\s*acceptabl"
      ],
      "exact_phrases": [
        "surplus acceptable",
        "surplus allowed",
        "accepts surplus",
        "excess property acceptable",
        "government surplus acceptable",
        "used serviceable acceptable",
        "USM acceptable",
        "used serviceable material",
        "surplus material acceptable"
      ],
      "partial_triggers": [
        "surplus accept",
        "excess accept",
        "USM accept",
        "used serviceable"
      ],
      "context_patterns": [
        {
          "before": ["will accept", "may use"],
          "trigger": "surplus",
          "after": ["material", "parts", "property"]
        }
      ],
      "agency_specific": {
        "DLA": ["DLA surplus", "Defense surplus"]
      },
      "negative_patterns": [
        "no surplus",
        "not surplus",
        "exclude surplus"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["surplus", "OR", "excess"],
        ["used", "AND", "serviceable"]
      ],
      "scoring_weights": {
        "explicit_match": -10,
        "positive_indicator": true,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "factory_new_only",
      "regex_patterns": [
        "factory\\s*new\\s*only",
        "new\\s*manufactur[e|ed]\\s*only",
        "(?:only\\s*)?brand\\s*new\\s*(?:parts?\\s*)?(?:only)?",
        "no\\s*refurbish[e|ed]",
        "no\\s*rebuilt",
        "no\\s*overhaul[e|ed]",
        "no\\s*used\\s*(?:parts?)?",
        "no\\s*surplus",
        "new\\s*condition\\s*only",
        "unused\\s*only",
        "(?:must\\s*be\\s*)?new\\s*(?:parts?\\s*)?only"
      ],
      "exact_phrases": [
        "factory new only",
        "new manufacture only",
        "brand new only",
        "no refurbished",
        "no rebuilt",
        "no overhauled",
        "no used",
        "no surplus",
        "new condition only",
        "unused only",
        "must be new",
        "new parts only"
      ],
      "partial_triggers": [
        "factory new on",
        "new only",
        "no refurb",
        "no rebuilt",
        "no used"
      ],
      "context_patterns": [
        {
          "before": ["must be", "requires", "only accept"],
          "trigger": "factory new",
          "after": ["parts", "components", "condition"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "new or refurbished",
        "refurbished acceptable",
        "surplus acceptable"
      ],
      "code_triggers": {
        "condition_codes": ["NS", "NE", "1"]
      },
      "compound_patterns": [
        ["factory", "AND", "new", "AND", "only"],
        ["no", "AND", "refurbished"]
      ],
      "scoring_weights": {
        "explicit_match": 10,
        "hard_stop": true,
        "sos_capability": "LIMITED"
      }
    },
    {
      "group_name": "oem_new_required",
      "regex_patterns": [
        "OEM\\s*new\\s*(?:parts?\\s*)?requir[e|ed]",
        "(?:only\\s*)?OEM\\s*new\\s*(?:parts?\\s*)?(?:only)?",
        "original\\s*equipment\\s*manufactur[e|er]\\s*new",
        "factory\\s*OEM\\s*(?:parts?\\s*)?only",
        "genuine\\s*OEM\\s*(?:parts?\\s*)?requir[e|ed]",
        "must\\s*be\\s*OEM\\s*new"
      ],
      "exact_phrases": [
        "OEM new required",
        "OEM new only",
        "original equipment manufacturer new",
        "factory OEM only",
        "genuine OEM required",
        "must be OEM new",
        "OEM new parts required"
      ],
      "partial_triggers": [
        "OEM new req",
        "OEM new only",
        "genuine OEM"
      ],
      "context_patterns": [
        {
          "before": ["must be", "requires", "only"],
          "trigger": "OEM new",
          "after": ["parts", "components", "required"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "OEM or equivalent",
        "OEM or aftermarket",
        "non-OEM acceptable"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["OEM", "AND", "new", "AND", "required"],
        ["original", "AND", "equipment", "AND", "new"]
      ],
      "scoring_weights": {
        "explicit_match": 10,
        "hard_stop": true,
        "sos_capability": "NO"
      }
    },
    {
      "group_name": "condition_codes",
      "regex_patterns": [
        "condition\\s*code\\s*[A-Z0-9]+",
        "CC\\s*[A-Z0-9]+",
        "cond\\.?\\s*code\\s*[A-Z0-9]+",
        "condition\\s*[A-Z]{1,2}(?:\\s|,|;)",
        "acceptable\\s*condition\\s*code[s]?"
      ],
      "exact_phrases": [
        "condition code A",
        "condition code NS",
        "condition code NE",
        "condition code OH",
        "condition code SV",
        "condition code AR",
        "condition code FN",
        "condition code RFB",
        "CC NS",
        "CC OH",
        "CC SV"
      ],
      "partial_triggers": [
        "condition code",
        "CC ",
        "cond code"
      ],
      "context_patterns": [
        {
          "before": ["acceptable", "require", "must be"],
          "trigger": "condition code",
          "after": ["A", "NS", "NE", "OH", "SV", "AR", "FN"]
        }
      ],
      "agency_specific": {
        "DLA": ["DLA condition codes"],
        "NAVSUP": ["Navy condition codes"]
      },
      "negative_patterns": [],
      "code_triggers": {
        "new_codes": ["NS", "NE", "FN", "1", "A"],
        "refurb_codes": ["OH", "RFB", "4", "5"],
        "serviceable_codes": ["SV", "AR", "3"],
        "unserviceable_codes": ["F", "G", "H", "S"]
      },
      "compound_patterns": [],
      "scoring_weights": {
        "new_only": 5,
        "refurb_allowed": -5,
        "serviceable_allowed": -3
      }
    },
    {
      "group_name": "rotable_components",
      "regex_patterns": [
        "rotabl[e]?\\s*(?:component[s]?|part[s]?|item[s]?)",
        "rotabl[e]?\\s*pool",
        "rotabl[e]?\\s*exchang[e]?",
        "rotabl[e]?\\s*spar[e|es]",
        "LRU[s]?\\s*\\(?line\\s*replaceable\\s*unit",
        "repairabl[e]?\\s*(?:component[s]?|assembly|assemblies)"
      ],
      "exact_phrases": [
        "rotable component",
        "rotable components",
        "rotable parts",
        "rotable pool",
        "rotable exchange",
        "rotable spares",
        "line replaceable unit",
        "LRU",
        "repairable component",
        "repairable assembly"
      ],
      "partial_triggers": [
        "rotable",
        "rotatable",
        "LRU",
        "repairable"
      ],
      "context_patterns": [
        {
          "before": ["provide", "supply", "deliver"],
          "trigger": "rotable",
          "after": ["component", "part", "pool", "exchange"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "consumable",
        "expendable",
        "non-rotable"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["rotable", "AND", "component"],
        ["line", "AND", "replaceable", "AND", "unit"]
      ],
      "scoring_weights": {
        "explicit_match": -5,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "faa_form_8130_3",
      "regex_patterns": [
        "FAA\\s*Form\\s*8130[\\-\\s]?3",
        "8130[\\-\\s]?3\\s*(?:tag[s]?|certificat[e|ion])",
        "FAA\\s*(?:certificat[e|ion]|approval)\\s*8130",
        "airworthiness\\s*(?:approval\\s*)?tag",
        "FAA\\s*authorized\\s*release",
        "FAA\\s*(?:Form\\s*)?8130\\s*certificat"
      ],
      "exact_phrases": [
        "FAA Form 8130-3",
        "8130-3 certificate",
        "8130-3 tag",
        "FAA 8130-3",
        "airworthiness approval tag",
        "FAA authorized release certificate",
        "FAA Form 8130-3 certification",
        "8130-3 documentation"
      ],
      "partial_triggers": [
        "8130-3",
        "8130 3",
        "FAA 8130",
        "airworthiness tag"
      ],
      "context_patterns": [
        {
          "before": ["requires", "must have", "with"],
          "trigger": "8130-3",
          "after": ["certificate", "tag", "documentation", "required"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "no 8130-3 required",
        "8130-3 not required"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["FAA", "AND", "8130", "AND", "3"],
        ["airworthiness", "AND", "tag"]
      ],
      "scoring_weights": {
        "explicit_match": -8,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "aftermarket_parts",
      "regex_patterns": [
        "aftermarket\\s*(?:parts?|component[s]?)?\\s*(?:is\\s*)?(?:acceptabl[e]?|allow[e|ed])",
        "PMA\\s*part[s]?\\s*(?:acceptabl[e]?|allow[e|ed])",
        "non[\\-\\s]?OEM\\s*(?:parts?\\s*)?(?:acceptabl[e]?|allow[e|ed])",
        "(?:OEM\\s*)?or\\s*aftermarket",
        "(?:OEM\\s*)?or\\s*equivalent",
        "equivalent\\s*to\\s*OEM",
        "aftermarket\\s*manufactur[e|er]"
      ],
      "exact_phrases": [
        "aftermarket acceptable",
        "aftermarket parts acceptable",
        "PMA parts acceptable",
        "non-OEM acceptable",
        "OEM or aftermarket",
        "OEM or equivalent",
        "equivalent to OEM",
        "aftermarket manufacturer",
        "PMA parts allowed"
      ],
      "partial_triggers": [
        "aftermarket accept",
        "PMA accept",
        "non-OEM accept",
        "or equivalent"
      ],
      "context_patterns": [
        {
          "before": ["accept", "allow", "may use"],
          "trigger": "aftermarket",
          "after": ["parts", "components", "acceptable"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "no aftermarket",
        "OEM only",
        "no PMA",
        "genuine parts only"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["aftermarket", "OR", "PMA"],
        ["OEM", "OR", "equivalent"]
      ],
      "scoring_weights": {
        "explicit_match": -7,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "traceability_requirements",
      "regex_patterns": [
        "full\\s*traceabilit[y|ies]\\s*requir[e|ed]",
        "(?:complete\\s*)?chain\\s*of\\s*custody",
        "traceabl[e]?\\s*to\\s*OEM",
        "OEM\\s*traceabilit[y|ies]",
        "back[\\-\\s]?to[\\-\\s]?birth\\s*record[s]?",
        "pedigree\\s*(?:documentation\\s*)?requir[e|ed]",
        "trace\\s*(?:documentation\\s*)?to\\s*manufactur"
      ],
      "exact_phrases": [
        "full traceability required",
        "chain of custody",
        "traceable to OEM",
        "OEM traceability",
        "back-to-birth records",
        "pedigree documentation required",
        "trace to manufacturer",
        "complete chain of custody",
        "traceability documentation"
      ],
      "partial_triggers": [
        "traceability req",
        "chain of custody",
        "traceable to",
        "pedigree"
      ],
      "context_patterns": [
        {
          "before": ["requires", "must have", "with"],
          "trigger": "traceability",
          "after": ["to OEM", "documentation", "records", "required"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "no traceability required",
        "traceability not required"
      ],
      "code_triggers": {},
      "compound_patterns": [
        ["full", "AND", "traceability"],
        ["chain", "AND", "custody"]
      ],
      "scoring_weights": {
        "faa_trace": -5,
        "oem_trace_only": 8,
        "military_trace": 9
      }
    },
    {
      "group_name": "prefer_new",
      "regex_patterns": [
        "prefer[s]?\\s*new",
        "preferenc[e]?\\s*(?:for\\s*)?new",
        "new\\s*(?:is\\s*)?prefer[r]?[e|ed]",
        "new\\s*for\\s*critical\\s*item[s]?",
        "critical\\s*(?:parts?\\s*)?(?:must\\s*be\\s*)?new"
      ],
      "exact_phrases": [
        "prefer new",
        "preference for new",
        "new preferred",
        "new for critical items",
        "critical parts must be new",
        "preference is new"
      ],
      "partial_triggers": [
        "prefer new",
        "new prefer",
        "critical new"
      ],
      "context_patterns": [
        {
          "before": ["preference", "would prefer"],
          "trigger": "new",
          "after": ["parts", "components", "condition"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [],
      "code_triggers": {},
      "compound_patterns": [
        ["prefer", "AND", "new"],
        ["critical", "AND", "new"]
      ],
      "scoring_weights": {
        "explicit_match": 3,
        "requires_review": true
      }
    },
    {
      "group_name": "consumable_parts",
      "regex_patterns": [
        "consumabl[e]?\\s*(?:part[s]?|item[s]?|material[s]?)",
        "expendabl[e]?\\s*(?:part[s]?|item[s]?)",
        "non[\\-\\s]?rotabl[e]?\\s*(?:part[s]?|item[s]?)",
        "one[\\-\\s]?time[\\-\\s]?use",
        "disposable\\s*(?:part[s]?|item[s]?)"
      ],
      "exact_phrases": [
        "consumable parts",
        "consumable items",
        "expendable parts",
        "non-rotable parts",
        "one-time use",
        "disposable parts",
        "consumable material"
      ],
      "partial_triggers": [
        "consumable",
        "expendable",
        "non-rotable",
        "disposable"
      ],
      "context_patterns": [
        {
          "before": ["provide", "supply"],
          "trigger": "consumable",
          "after": ["parts", "items", "material"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [
        "rotable",
        "repairable",
        "overhaulable"
      ],
      "code_triggers": {},
      "compound_patterns": [],
      "scoring_weights": {
        "explicit_match": -3,
        "sos_capability": "YES"
      }
    },
    {
      "group_name": "ac_00_56_certification",
      "regex_patterns": [
        "AC\\s*00[\\-\\s]?56[A-Z]?",
        "Advisory\\s*Circular\\s*00[\\-\\s]?56",
        "ASA\\s*(?:Accreditation|accredited)",
        "AC\\s*00[\\-\\s]?56\\s*(?:certificat[e|ion]|complian[t|ce])"
      ],
      "exact_phrases": [
        "AC 00-56",
        "AC 00-56B",
        "Advisory Circular 00-56",
        "ASA Accreditation",
        "ASA accredited",
        "AC 00-56 certification",
        "AC 00-56 compliant"
      ],
      "partial_triggers": [
        "AC 00-56",
        "AC 0056",
        "ASA Accredit"
      ],
      "context_patterns": [
        {
          "before": ["requires", "must have"],
          "trigger": "AC 00-56",
          "after": ["certification", "compliance", "accreditation"]
        }
      ],
      "agency_specific": {},
      "negative_patterns": [],
      "code_triggers": {},
      "compound_patterns": [
        ["AC", "AND", "00", "AND", "56"]
      ],
      "scoring_weights": {
        "explicit_match": -8,
        "sos_capability": "YES"
      }
    }
  ]
}